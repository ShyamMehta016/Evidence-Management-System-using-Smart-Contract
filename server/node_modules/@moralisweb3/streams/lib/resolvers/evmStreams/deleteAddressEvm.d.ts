import { EvmAddress, EvmAddressish } from '@moralisweb3/evm-utils';
import { operations } from '../../generated/types';
declare const name = "DeleteAddressFromStream";
declare type Name = typeof name;
declare type PathParams = operations[Name]['parameters']['path'];
declare type BodyParams = operations[Name]['requestBody']['content']['application/json'];
declare type ApiParams = Omit<PathParams & BodyParams, 'address'> & {
    address: string | string[];
};
export interface DeleteAddressEvmParams extends Omit<ApiParams, 'address'> {
    address: EvmAddressish | EvmAddressish[];
}
export declare const deleteAddressEvm: import("@moralisweb3/api-utils").EndpointFactory<ApiParams, DeleteAddressEvmParams, {
    streamId: string;
    address: string & (string | undefined)[];
}, {
    address: EvmAddress | EvmAddress[] | undefined;
    streamId: string;
}, {
    address: string | string[] | undefined;
    streamId: string;
}>;
export {};
//# sourceMappingURL=deleteAddressEvm.d.ts.map